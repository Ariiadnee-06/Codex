@model List<codex.Models.Computadora>
@{
    ViewData["Title"] = "Inicio";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


<div class="resultado-bg container py-4">
    <h2 class="resultado-title mb-4 text-center">@ViewData["Title"]</h2>

    @if (!Model.Any())
    {
        <div class="alert alert-info resultado-alert text-center" role="alert">
            <i class="fas fa-info-circle me-2"></i>
            No encontramos computadoras que coincidan con tus respuestas. Intenta ajustar el presupuesto o necesidades.
        </div>
    }
    else
    {
        <div class="row g-4">
            @foreach (var item in Model)
            {
                <div class="col-md-4">
                    <div class="card h-100 resultado-card shadow-sm">
                        <div class="position-relative">
                            <img src="@item.ImagenUrl" class="card-img-top resultado-img p-3" alt="Imagen de @item.Modelo" />
                            <button class="btn-favorito" onclick="toggleFavorito('@item.Id', '@item.Marca @item.Modelo', '@item.ImagenUrl', '@item.Precio.ToString(System.Globalization.CultureInfo.InvariantCulture)', '@item.Descripcion')">
                                <i class="fas fa-star"></i>
                            </button>
                        </div>
                        <div class="card-body d-flex flex-column">
                            <h5 class="card-title resultado-card-title">@item.Marca @item.Modelo</h5>
                            <p class="card-text flex-grow-1 resultado-desc">@item.Descripcion</p>
                            <div class="mt-auto">
                                <p class="card-text">
                                    <span class="badge resultado-precio">
                                        @item.Precio.ToString("C0", new System.Globalization.CultureInfo("es-CO"))
                                    </span>
                                </p>
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>
    }
</div>

<style>
    .resultado-bg {
        background-color: #0E021F;
        min-height: 100vh;
        border-radius: 18px;
    }
    .resultado-title {
        color: #f6e6fc;
        font-family: 'Coolvetica', 'Lined', sans-serif;
        font-size: 2.5rem;
        letter-spacing: 1px;
        font-weight: lighter;
    }
    .resultado-alert {
        background-color: #f6e6fc;
        color: #130724;
        border: none;
        font-family: 'Lined', sans-serif;
        font-size: 1.2rem;
        border-radius: 12px;
    }
    .resultado-card {
        background: #f6e6fc;
        border-radius: 18px;
        border: 2px solid #130724;
        transition: transform 0.2s, box-shadow 0.2s;
        box-shadow: 0 2px 12px rgba(14,2,31,0.10);
    }
    .resultado-card:hover {
        transform: translateY(-8px) scale(1.03);
        box-shadow: 0 6px 24px rgba(14,2,31,0.18);
        border-color: #be9fe1;
    }
    .resultado-img {
        background: #fff;
        border-radius: 12px;
        height: 200px;
        object-fit: contain;
        border: 1px solid #e0d6f7;
    }
    .resultado-card-title {
        color: #130724;
        font-family: 'Coolvetica', 'Lined', sans-serif;
        font-size: 1.3rem;
        margin-bottom: 0.5rem;
        font-weight: normal;
        letter-spacing: 0.5px;
    }
    .resultado-desc {
        color: #0E021F;
        font-size: 1.05rem;
        font-family: 'Lined', sans-serif;
        margin-bottom: 0.7rem;
    }
    .resultado-precio {
        background: #130724;
        color: #f6e6fc;
        font-size: 1.15rem;
        padding: 0.5em 1em;
        border-radius: 12px;
        font-family: 'Coolvetica', 'Lined', sans-serif;
        letter-spacing: 1px;
        box-shadow: 0 2px 8px rgba(14,2,31,0.10);
    }
    .btn-favorito {
        position: absolute;
        top: 10px;
        right: 10px;
        background: rgba(255, 255, 255, 0.9);
        border: none;
        border-radius: 50%;
        width: 40px;
        height: 40px;
        display: flex;
        align-items: center;
        justify-content: center;
        cursor: pointer;
        transition: all 0.3s ease;
        box-shadow: 0 2px 8px rgba(0,0,0,0.1);
    }
    .btn-favorito i {
        color: #ffd700;
        font-size: 1.2rem;
        transition: all 0.3s ease;
    }
    .btn-favorito:hover {
        transform: scale(1.1);
        background: white;
    }
    .btn-favorito.activo i {
        animation: starPulse 0.3s ease-in-out;
    }
    @@keyframes starPulse {
        0% { transform: scale(1); }
        50% { transform: scale(1.3); }
        100% { transform: scale(1); }
    }
    @@keyframes slideIn {
        from { transform: translateX(100%); opacity: 0; }
        to { transform: translateX(0); opacity: 1; }
    }
    @@keyframes slideOut {
        from { transform: translateX(0); opacity: 1; }
        to { transform: translateX(100%); opacity: 0; }
    }
</style>

<script>
    function toggleFavorito(id, nombre, imagen, precio, descripcion) {
        let favoritos = JSON.parse(localStorage.getItem('favoritos')) || [];
        const index = favoritos.findIndex(f => f.id === id);
        
        if (index === -1) {
            // Agregar a favoritos
            favoritos.push({
                id: id,
                nombre: nombre,
                imagen: imagen,
                precio: parseFloat(precio),
                descripcion: descripcion,
                fecha: new Date().toISOString()
            });
            mostrarNotificacion('Agregado a favoritos');
        } else {
            // Quitar de favoritos
            favoritos.splice(index, 1);
            mostrarNotificacion('Quitado de favoritos');
        }
        
        localStorage.setItem('favoritos', JSON.stringify(favoritos));
        actualizarBotonFavorito(id);
    }

    function actualizarBotonFavorito(id) {
        const boton = document.querySelector(`[onclick="toggleFavorito('${id}'"]`);
        const favoritos = JSON.parse(localStorage.getItem('favoritos')) || [];
        const esFavorito = favoritos.some(f => f.id === id);
        
        if (boton) {
            boton.classList.toggle('activo', esFavorito);
        }
    }

    function mostrarNotificacion(mensaje) {
        const notificacion = document.createElement('div');
        notificacion.className = 'notificacion';
        notificacion.textContent = mensaje;
        notificacion.style.cssText = `
            position: fixed;
            top: 20px;
            right: 20px;
            background: #130724;
            color: #f6e6fc;
            padding: 15px 25px;
            border-radius: 8px;
            font-family: 'Lined', sans-serif;
            z-index: 1000;
            animation: slideIn 0.3s ease-out;
        `;
        
        document.body.appendChild(notificacion);
        
        setTimeout(() => {
            notificacion.style.animation = 'slideOut 0.3s ease-out';
            setTimeout(() => notificacion.remove(), 300);
        }, 2000);
    }

    // Inicializar estado de botones
    document.addEventListener('DOMContentLoaded', () => {
        const favoritos = JSON.parse(localStorage.getItem('favoritos')) || [];
        favoritos.forEach(fav => actualizarBotonFavorito(fav.id));
    });
</script>
